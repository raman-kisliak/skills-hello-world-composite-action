name: 'Hello World'
description: 'Greet someone'
inputs: 
  who-to-greet:  # id of input 
    description: 'Who to greet' 
    required: true 
    default: 'World'
outputs: #⬅  Deklaracja output dla AKCJI 
  random-number: 
    description: "Random number" 
    value: ${{ steps.random-number-generator.outputs.random-number }} #⬅  Jak widać nie różni się za bardzo od referencji w workflow
runs: 
  using: "composite" #⬅  Tu określamy co to jest. 
  steps: #⬅  Stepy jak w workflow. Nie mamy tu jobów (Co jest oczywiste, bo piszemy akcję)  
    - name: Set Greeting 
      run: echo "Hello $INPUT_WHO_TO_GREET." 
      shell: bash 
      env: 
        INPUT_WHO_TO_GREET: ${{ inputs.who-to-greet }}  #⬅  Pobranie inputu z akcji 
 
    - name: Random Number Generator 
      id: random-number-generator 
      run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT 
      shell: bash

    - name: Set GitHub Path #⬅  Akcja dodaje aktualny katalog wykonawczy akcji do $PATH. Dzięki temu akcja poniżej zadziała. 
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH 
      shell: bash 
      env: 
        GITHUB_ACTION_PATH: ${{ github.action_path }} 
 
    - name: Run goodbye.sh 
      run: goodbye.sh 
      shell: bash